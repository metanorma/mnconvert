<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.metanorma</groupId>
	<artifactId>mnconvert</artifactId>
	<version>1.73.0</version>
	<name>Metanorma XML to NISO STS XML two-directional, IEEE to Metanorma ADOC, Metanorma XML to IEEE XML, and XML2RFC to Metanorma Asciidoc IETF converter</name>
	<packaging>jar</packaging>
	<url>https://www.metanorma.org</url>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<jarname>${project.artifactId}-${project.version}.jar</jarname>
		<exec.mainClass>org.metanorma.mnconvert</exec.mainClass>
		<junit.version>5.13.4</junit.version>
		<maven.surefire.plugin>3.5.3</maven.surefire.plugin>
		<native.maven.plugin.version>0.11.0</native.maven.plugin.version>
	</properties>
	<distributionManagement>
		<repository>
			<id>metanorma_mnconvert</id>
			<name>GitHub Metanorma Apache Maven Packages</name>
			<url>https://maven.pkg.github.com/metanorma/mnconvert</url>
		</repository>
	</distributionManagement>
	<repositories>
		<repository>
			<id>central</id>
			<url>https://repo1.maven.org/maven2</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>3.2.1</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<transformers>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<manifestEntries>
										<Main-Class>org.metanorma.mnconvert</Main-Class>
										<Implementation-Version>${project.version}</Implementation-Version>
									</manifestEntries>
								</transformer>
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven.surefire.plugin}</version>
				<configuration>
					<!--redirectTestOutputToFile>true</redirectTestOutputToFile-->
					<systemPropertyVariables>
						<buildDirectory>${project.build.directory}</buildDirectory>
					</systemPropertyVariables>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<dependencies>
		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>xalan</groupId>
			<artifactId>xalan</artifactId>
			<version>2.7.3</version>
		</dependency>
		<dependency>
			<groupId>xalan</groupId>
			<artifactId>serializer</artifactId>
			<version>2.7.3</version>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.ginsberg</groupId>
			<artifactId>junit5-system-exit</artifactId>
			<version>1.1.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			 <groupId>commons-io</groupId>
			 <artifactId>commons-io</artifactId>
			 <version>2.14.0</version>
		</dependency>
		<dependency>
			 <groupId>com.thaiopensource</groupId>
			 <artifactId>jing</artifactId>
			 <version>20091111</version>
		</dependency>
		<dependency>
			 <groupId>xerces</groupId>
			 <artifactId>xercesImpl</artifactId>
			 <version>2.12.2</version>
		</dependency>
		<dependency>
			 <groupId>xml-apis</groupId>
			 <artifactId>xml-apis</artifactId>
			 <version>1.4.01</version>
		</dependency>
	</dependencies>
	<profiles>
		 <profile>
			 <id>native</id>
			 <build>
				 <plugins>
					 <plugin>
						 <artifactId>maven-antrun-plugin</artifactId>
						 <version>3.1.0</version>
						 <executions>
							 <execution>
								 <id>generate-directory</id>
								 <goals>
									 <goal>run</goal>
								 </goals>
								 <phase>package</phase>
								 <configuration>
										<target>
												<mkdir dir="target/native/nativeCompile"/>
										</target>
									</configuration>
							 </execution>
						 </executions>
					 </plugin>
					 <plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-shade-plugin</artifactId>
						<version>3.2.1</version>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>shade</goal>
								</goals>
								<configuration>
									<transformers>
										<transformer
											implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
										<transformer
											implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
											<manifestEntries>
												<Main-Class>org.metanorma.mnconvert</Main-Class>
												<Implementation-Version>${project.version}</Implementation-Version>
											</manifestEntries>
										</transformer>
									</transformers>
								</configuration>
							</execution>
						</executions>
					 </plugin>
					 <!-- <plugin>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>exec-maven-plugin</artifactId>
							<version>3.0.0</version>
							<executions>
									<execution>
											<id>java-agent</id>
											<goals>
													<goal>exec</goal>
											</goals>
											<phase>test</phase>
											<configuration>
													<executable>java</executable>
													<workingDirectory>${project.build.directory}</workingDirectory>
													<arguments>
															<argument>-classpath</argument>
															<classpath/>
															<argument>${exec.mainClass}</argument>
													</arguments>
											</configuration>
									</execution>
									<execution>
										<id>test-native</id>
										<goals>
											<goal>test</goal>
										</goals>
										<phase>test</phase>
									</execution>
							</executions>
					</plugin> -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>${maven.surefire.plugin}</version>
					</plugin>
					 <plugin>
						 <groupId>org.graalvm.buildtools</groupId>
						 <artifactId>native-maven-plugin</artifactId>
						 <version>${native.maven.plugin.version}</version>
						 <extensions>true</extensions>
						 <executions>
							 <execution>
								 <id>build-native</id>
								 <goals>
									 <goal>compile-no-fork</goal>
								 </goals>
								 <phase>package</phase>
							 </execution>
						 </executions>
						 <configuration>
								 <mainClass>org.metanorma.mnconvert</mainClass>
								 <imageName>native/nativeCompile/${project.artifactId}-${project.version}</imageName>
								 <buildArgs>
									 <buildArg>-march=compatibility</buildArg> <!-- generate instructions for best compatibility -->
									 <!-- <buildArg>-H:ThrowMissingRegistrationErrors=</buildArg>
									 <buildArg>-H:MissingRegistrationReportingMode=Warn</buildArg> -->
								 </buildArgs>
								 <classpath>
									 <param>${project.build.directory}/${project.artifactId}-${project.version}.jar</param>
								 </classpath>
						 </configuration>
					 </plugin>
				 </plugins>
			 </build>
		 </profile>
	 </profiles>
</project>
